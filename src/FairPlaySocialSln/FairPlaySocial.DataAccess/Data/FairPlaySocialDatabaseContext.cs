// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using FairPlaySocial.DataAccess.Models;
using Microsoft.EntityFrameworkCore;

namespace FairPlaySocial.DataAccess.Data;

public partial class FairPlaySocialDatabaseContext : DbContext
{
    public FairPlaySocialDatabaseContext(DbContextOptions<FairPlaySocialDatabaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ApplicationRole> ApplicationRole { get; set; }

    public virtual DbSet<ApplicationUser> ApplicationUser { get; set; }

    public virtual DbSet<ApplicationUserFollow> ApplicationUserFollow { get; set; }

    public virtual DbSet<ApplicationUserRole> ApplicationUserRole { get; set; }

    public virtual DbSet<ErrorLog> ErrorLog { get; set; }

    public virtual DbSet<Photo> Photo { get; set; }

    public virtual DbSet<Post> Post { get; set; }

    public virtual DbSet<UserPreference> UserPreference { get; set; }

    public virtual DbSet<UserProfile> UserProfile { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.HasAnnotation("Scaffolding:ConnectionString", "Data Source=(local);Initial Catalog=FairPlaySocial.Database;Integrated Security=true");

        modelBuilder.Entity<ApplicationRole>(entity =>
        {
            entity.HasKey(e => e.ApplicationRoleId).HasName("PK_Application");
        });

        modelBuilder.Entity<ApplicationUserFollow>(entity =>
        {
            entity.HasOne(d => d.FollowedApplicationUser).WithMany(p => p.ApplicationUserFollowFollowedApplicationUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ApplicationUserFollow_FollowedApplicationUser");

            entity.HasOne(d => d.FollowerApplicationUser).WithMany(p => p.ApplicationUserFollowFollowerApplicationUser)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ApplicationUserFollow_FollowerApplicationUser");
        });

        modelBuilder.Entity<ApplicationUserRole>(entity =>
        {
            entity.HasOne(d => d.ApplicationRole).WithMany(p => p.ApplicationUserRole)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ApplicationUserRole_ApplicationRole");

            entity.HasOne(d => d.ApplicationUser).WithMany(p => p.ApplicationUserRole)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ApplicationUserRole_ApplicationUser");
        });

        modelBuilder.Entity<Post>(entity =>
        {
            entity.HasOne(d => d.OwnerApplicationUser).WithMany(p => p.Post)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Post_ApplicationUser");

            entity.HasOne(d => d.Photo).WithMany(p => p.Post)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Post_Photo");
        });

        modelBuilder.Entity<UserPreference>(entity =>
        {
            entity.HasOne(d => d.ApplicationUser).WithOne(p => p.UserPreference)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserPreference_ApplicationUser");
        });

        modelBuilder.Entity<UserProfile>(entity =>
        {
            entity.Property(e => e.UserProfileId).ValueGeneratedNever();

            entity.HasOne(d => d.ApplicationUser).WithOne(p => p.UserProfile)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UserProfile_ApplicationUser");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}