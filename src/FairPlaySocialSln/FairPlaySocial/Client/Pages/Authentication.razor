@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

<LoadingIndicator IsLoading="true"></LoadingIndicator>

<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="OnLogInSucceeded" OnLogOutSucceeded="OnLogOutSucceeded">
    <CompletingLoggingIn>
        <h1>Completing Logging In</h1>
    </CompletingLoggingIn>
    <CompletingLogOut>
        <h1>Completing LogOut</h1>
    </CompletingLogOut>
    <LoggingIn>
        <h1>Logging In</h1>
    </LoggingIn>
    <LogInFailed>
        <h1>Log In Failed</h1>
    </LogInFailed>
    <LogOut>
        <h1>Log Out</h1>
    </LogOut>
    <LogOutFailed>
        <h1>Log Out Failed</h1>
    </LogOutFailed>
    <LogOutSucceeded>
        <h1>Log Out Succeeded</h1>
    </LogOutSucceeded>
</RemoteAuthenticatorView>

@code {
    [Parameter]
    public string? Action { get; set; }
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    private async Task OnLogInSucceeded(RemoteAuthenticationState remoteAuthenticationState)
    {
        var state = await AuthenticationStateTask!;
        var claims = state.User.Claims.ToList();;
    }

    private void OnLogOutSucceeded(RemoteAuthenticationState remoteAuthenticationState)
    {
        remoteAuthenticationState.ReturnUrl = "/";
    }
}